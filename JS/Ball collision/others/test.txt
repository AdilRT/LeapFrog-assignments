function getDistance(x1,y1,x2,y2){
    let xDistance = x2-x1;
    let yDistance = y2-y1;

    return Math.sqrt(Math.pow(xDistance,2) +Math.pow(yDistance,2));
}

function createCircle(x,y,radius,color){
    this.x=x;
    this.y=y;
    this.radius=radius;
    this.color=color;
 
    this.update = function(){
        this.draw();
    }

    this.draw = function(){
        c.beginPath();
        c.arc(this.x,this.y,this.radius,0,2 * Math.PI,false);
        c.fillStyle = this.color;
        c.fill();
        c.closePath();
    }
}

// ANIMATION LOOP // DRAWS THE CIRCLE
function animate(){
// method tells the browser that you wish to perform an animation and 
// requests that the browser calls a specified function to update an animation
//  before the next repaint. 
    requestAnimationFrame(animate);
    // c.clearRect(0,0,canvas.width,canvas.height);
    circle1.update();

}
 
//creatin object
let circle1;
function init(){
    circle1=new createCircle(300,200,100,'red');
}

init();
animate();

//1: ensure taht 2 ojects dont spawn on top of eachother. if they spawn/overlap they wont move since the collision detection algo will assume that they are colliding and goes for infinite
//2: calc distnace of 1 ball to all other balls in the canvas
//3: if collided

